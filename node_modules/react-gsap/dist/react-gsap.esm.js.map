{"version":3,"file":"react-gsap.esm.js","sources":["../src/types.ts","../src/helper.ts","../src/Provider.tsx","../src/plugins/PlugInSvgDraw.ts","../src/plugins/PlugInCount.ts","../src/Tween.tsx","../src/Timeline.tsx","../src/tools/Reveal.tsx","../src/tools/ScrollTrigger.tsx","../src/tools/SplitText.tsx","../src/tools/Controls.tsx"],"sourcesContent":["export enum PlayState {\n  play = 'play',\n  restart = 'restart',\n  reverse = 'reverse',\n  restartReverse = 'restartReverse',\n  stop = 'stop',\n  stopEnd = 'stopEnd',\n  pause = 'pause',\n  resume = 'resume',\n}\n","import { gsap } from 'gsap';\nimport React from 'react';\nimport { PlayState } from './types';\nimport { TimelineProps } from 'Timeline';\nimport { TweenProps } from 'Tween';\nimport { ContextProps } from 'Provider';\n\nif (!String.prototype.startsWith) {\n  String.prototype.startsWith = function(searchString, position) {\n    position = position || 0;\n    return this.indexOf(searchString, position) === position;\n  };\n}\n\nconst setPlayState = (\n  playState?: PlayState,\n  prevPlayState?: PlayState | null,\n  tween: any = null\n) => {\n  if (tween && playState && playState !== prevPlayState) {\n    if (playState === PlayState.play) {\n      tween.play();\n    } else if (playState === PlayState.restart) {\n      tween.restart(true);\n    } else if (playState === PlayState.reverse) {\n      tween.reverse();\n    } else if (playState === PlayState.restartReverse) {\n      tween.reverse(0);\n    } else if (playState === PlayState.stop) {\n      tween.pause(0);\n    } else if (playState === PlayState.stopEnd) {\n      tween.reverse(0);\n      tween.pause();\n    } else if (playState === PlayState.pause) {\n      tween.pause();\n    } else if (playState === PlayState.resume) {\n      tween.resume();\n    }\n  }\n};\n\nconst setInitialPlayState = (tweenOrTimeline: any, props: TimelineProps | TweenProps) => {\n  const { playState } = props;\n  if (playState) {\n    setPlayState(playState, PlayState.play, tweenOrTimeline);\n  }\n};\n\nconst getInitialPaused = (playState?: PlayState) => {\n  return (\n    playState &&\n    (playState === PlayState.stop ||\n      playState === PlayState.stopEnd ||\n      playState === PlayState.pause)\n  );\n};\n\nconst getTweenFunction = (\n  targets: any,\n  props: TweenProps | TimelineProps,\n  context?: ContextProps\n): gsap.core.Tween | gsap.core.Timeline => {\n  const {\n    children,\n    wrapper,\n\n    duration = 1,\n    from,\n    to,\n\n    stagger,\n\n    progress,\n    totalProgress,\n    playState,\n    disabled,\n    onlyInvalidateTo,\n\n    onCompleteAll,\n    onCompleteAllParams,\n    onCompleteAllScope,\n    onStartAll,\n\n    position,\n    target,\n\n    ...vars\n  } = props;\n\n  let tweenFunction: gsap.core.Tween | gsap.core.Timeline;\n  const paused = getInitialPaused(playState);\n  const plugins = context?.getPlugins(context?.plugins, targets) ?? {};\n\n  if (from && to) {\n    // special props like paused always go in the toVars parameter\n    tweenFunction = gsap.fromTo(targets, from, {\n      stagger,\n      duration,\n      paused,\n      ...to,\n      ...vars,\n      ...plugins,\n    });\n  } else if (to) {\n    tweenFunction = gsap.to(targets, { stagger, duration, paused, ...to, ...vars, ...plugins });\n  } else {\n    tweenFunction = gsap.from(targets, { stagger, duration, paused, ...from, ...vars, ...plugins });\n  }\n\n  // if multiple tweens (stagger), wrap them in a timeline\n  // TODO: if it's already an timeline add event handlers\n  if (Array.isArray(tweenFunction)) {\n    tweenFunction.forEach(t => {\n      t.paused(false);\n    });\n    tweenFunction = gsap.timeline({\n      ...vars,\n      tweens: tweenFunction,\n      smoothChildTiming: true,\n      onComplete: onCompleteAll,\n      onCompleteParams: onCompleteAllParams,\n      onCompleteScope: onCompleteAllScope,\n      onStart: onStartAll,\n    });\n  }\n\n  return tweenFunction;\n};\n\nconst callTweenFunction = (\n  tweenFunction: any,\n  functionName: string,\n  params: Array<any> | undefined = undefined,\n  returnFunction: string | undefined = undefined\n): void => {\n  if (Array.isArray(tweenFunction)) {\n    tweenFunction.forEach(tween => {\n      if (!params && returnFunction) {\n        params = [tween[returnFunction].apply(tween)];\n      }\n      tween[functionName].apply(tween, params);\n    });\n  } else {\n    if (!params && returnFunction) {\n      params = [tweenFunction[returnFunction].apply(tweenFunction)];\n    }\n    tweenFunction[functionName].apply(tweenFunction, params);\n  }\n};\n\nconst isEqual = (obj1: any, obj2: any) => {\n  // very easy equal check\n  // attention: if the order of properties are different it returns false\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n};\n\nconst refOrInnerRef = (child: any) => {\n  if (child.type.$$typeof && child.type.$$typeof.toString() === 'Symbol(react.forward_ref)') {\n    return 'ref';\n  }\n\n  // styled-components < 4\n  if (child.type.styledComponentId) {\n    return 'innerRef';\n  }\n\n  return 'ref';\n};\n\nfunction isElement(element: any) {\n  return React.isValidElement(element);\n}\n\nfunction isDOMTypeElement(element: any) {\n  return isElement(element) && typeof element.type === 'string';\n}\n\n// https://stackoverflow.com/a/39165137\nfunction getReactNode(dom: any, traverseUp = 0) {\n  const key = Object.keys(dom ?? {}).find(\n    key => key.startsWith('__reactInternalInstance$') || key.startsWith('__reactFiber$')\n  );\n\n  const domFiber = key && dom[key];\n  if (!domFiber) return null;\n\n  // react <16\n  if (domFiber._currentElement) {\n    let compFiber = domFiber._currentElement._owner;\n    for (let i = 0; i < traverseUp; i++) {\n      compFiber = compFiber._currentElement._owner;\n    }\n    return compFiber._instance;\n  }\n\n  // react 16+\n  if (domFiber.stateNode) {\n    return domFiber.stateNode;\n  }\n\n  const getCompFiber = (fiber: any) => {\n    //return fiber._debugOwner; // this also works, but is __DEV__ only\n    let parentFiber = fiber.return;\n    while (typeof parentFiber.type == 'string') {\n      parentFiber = parentFiber.return;\n    }\n    return parentFiber;\n  };\n  let compFiber = getCompFiber(domFiber);\n  for (let i = 0; i < traverseUp; i++) {\n    compFiber = getCompFiber(compFiber);\n  }\n  return compFiber.stateNode;\n}\n\nconst getRefProp = (child: any, addTarget: (target: any) => void) => {\n  // has to be tested if it works, which lib does still use innerRef?\n  if (child.props.innerRef) {\n    return {\n      innerRef: (target: any) => {\n        addTarget(target);\n        const { innerRef } = child.props;\n        if (typeof innerRef === 'function') innerRef(target);\n        else if (innerRef) innerRef.current = target;\n      },\n    };\n  }\n\n  return {\n    ref: (target: any) => {\n      addTarget(target);\n      const { ref } = child;\n      if (typeof ref === 'function') ref(target);\n      else if (ref) ref.current = target;\n    },\n  };\n};\n\nconst setOrAddTarget = (\n  target: any,\n  setTarget: (key: string, target: any) => void,\n  addTarget: (target: any) => void\n) => {\n  const reactNode = getReactNode(target);\n\n  if (reactNode) {\n    addTarget(reactNode);\n  } else if (target) {\n    Object.keys(target).forEach(key => {\n      const elementRef = target[key];\n      if (typeof elementRef === 'object' && elementRef.current) {\n        if (Array.isArray(elementRef.current)) {\n          elementRef.current.forEach((singleRef: React.RefObject<any>) => {\n            setTarget(key, singleRef);\n          });\n        } else {\n          setTarget(key, elementRef.current);\n        }\n      }\n    });\n  }\n};\n\nconst getTargetRefProp = (\n  child: any,\n  setTarget: (key: string, target: any) => void,\n  addTarget: (target: any) => void\n) => {\n  // has to be tested if it works, which lib does still use innerRef?\n  if (child.props.innerRef) {\n    return {\n      innerRef: (target: any) => {\n        setOrAddTarget(target, setTarget, addTarget);\n        // merge refs\n        const { innerRef } = child.props;\n        if (typeof innerRef === 'function') innerRef(target);\n        else if (innerRef) innerRef.current = target;\n      },\n    };\n  }\n\n  return {\n    ref: (target: any) => {\n      setOrAddTarget(target, setTarget, addTarget);\n      // merge refs\n      const { ref } = child;\n      if (typeof ref === 'function') ref(target);\n      else if (ref) ref.current = target;\n    },\n  };\n};\n\nconst nullishCoalescing = <T, R>(value: T, ifNullish: R): T | R => {\n  if (value === null || typeof value === 'undefined') {\n    return ifNullish;\n  }\n  return value;\n};\n\nconst setProps = (\n  tweenOrTimeline: any,\n  props: TimelineProps | TweenProps,\n  prevProps?: TimelineProps | TweenProps\n) => {\n  if (props.progress !== undefined && props.progress !== prevProps?.progress) {\n    tweenOrTimeline.progress(props.progress);\n  }\n  if (props.totalProgress !== undefined && props.totalProgress !== prevProps?.totalProgress) {\n    tweenOrTimeline.totalProgress(props.totalProgress);\n  }\n  if (\n    tweenOrTimeline.duration !== undefined &&\n    props.duration &&\n    props.duration !== prevProps?.duration\n  ) {\n    tweenOrTimeline.duration(props.duration);\n  }\n};\n\nexport {\n  getTweenFunction,\n  callTweenFunction,\n  setPlayState,\n  isEqual,\n  refOrInnerRef,\n  getRefProp,\n  getTargetRefProp,\n  nullishCoalescing,\n  setProps,\n  setInitialPlayState,\n  getInitialPaused,\n};\n","import React from 'react';\n\ntype RegisteredPlugins = 'scrollTrigger';\ntype Plugin = (targets: any) => any;\ntype Plugins = { [key in RegisteredPlugins]: Plugin } | {};\n\nexport type ContextProps = {\n  registerConsumer: (consumer: any) => void;\n  plugins?: Plugins;\n  getPlugins: (plugins?: Plugins, targets?: any) => any;\n};\n\nexport const Context = React.createContext<ContextProps>({\n  registerConsumer: () => {},\n  getPlugins: () => {},\n  plugins: {},\n});\n\nabstract class Provider<T, S = {}> extends React.Component<T, S> {\n  static contextType = Context;\n\n  consumers: any[];\n  plugins?: Plugins;\n\n  constructor(props: T) {\n    super(props);\n    this.consumers = [];\n    this.plugins = {};\n\n    this.registerConsumer = this.registerConsumer.bind(this);\n    this.getContextValue = this.getContextValue.bind(this);\n    this.getPlugin = this.getPlugin.bind(this);\n    this.getPlugins = this.getPlugins.bind(this);\n    this.renderWithProvider = this.renderWithProvider.bind(this);\n  }\n\n  registerConsumer(consumer: any) {\n    this.consumers.push(consumer);\n  }\n\n  getContextValue(plugin: Plugins = {}) {\n    return {\n      registerConsumer: this.registerConsumer,\n      // plugins: { ...this.context.plugins, ...plugin },\n      plugins: plugin,\n      getPlugins: this.getPlugins,\n    };\n  }\n\n  getPlugin(props: any, targets: any) {\n    return {};\n  }\n\n  getPlugins(plugins?: Plugins, targets?: any) {\n    return Object.keys(plugins ?? {}).reduce((acc, plugin) => {\n      if (Object.prototype.hasOwnProperty.call(plugins, plugin)) {\n        // @ts-ignore\n        return { ...acc, [plugin]: this.getPlugin(plugins[plugin], targets) };\n      }\n      return acc;\n    }, {});\n  }\n\n  renderWithProvider(output: any, plugin?: Plugins) {\n    return <Context.Provider value={this.getContextValue(plugin)}>{output}</Context.Provider>;\n  }\n}\n\nexport default Provider;\n","import { nullishCoalescing } from '../helper';\n\nlet gsap: any;\nlet _interpolate: any;\nlet _getProp: any;\nconst _getGSAP = () =>\n  gsap || (typeof window !== 'undefined' && (gsap = window.gsap) && gsap.registerPlugin && gsap);\n\ntype Point = {\n  x: number;\n  y: number;\n};\n\nfunction getDistance(p1: DOMPoint | Point, p2: DOMPoint | Point) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el: SVGCircleElement) {\n  return 2 * Math.PI * parseFloat(nullishCoalescing(el.getAttribute('r'), '1') || '0');\n}\n\nfunction getRectLength(el: SVGRectElement) {\n  return (\n    parseFloat(nullishCoalescing(el.getAttribute('width'), '1') || '0') * 2 +\n    parseFloat(nullishCoalescing(el.getAttribute('height'), '1') || '0') * 2\n  );\n}\n\nfunction getLineLength(el: SVGLineElement) {\n  return getDistance(\n    {\n      x: parseFloat(nullishCoalescing(el.getAttribute('x1'), '1') || '0'),\n      y: parseFloat(nullishCoalescing(el.getAttribute('y1'), '1') || '0'),\n    },\n    {\n      x: parseFloat(nullishCoalescing(el.getAttribute('x2'), '1') || '0'),\n      y: parseFloat(nullishCoalescing(el.getAttribute('y2'), '1') || '0'),\n    }\n  );\n}\n\nfunction getPolylineLength(el: SVGPolylineElement) {\n  const points = el.points;\n  let totalLength = 0;\n  let previousPos: DOMPoint | undefined = undefined;\n  for (let i = 0; i < points.numberOfItems; i++) {\n    const currentPos = points.getItem(i);\n    if (previousPos) totalLength += getDistance(previousPos, currentPos);\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el: SVGPolylineElement) {\n  const points = el.points;\n  return (\n    getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0))\n  );\n}\n\n// if path is splitted into multiple move commands then return longest path\nfunction getPathLength(el: SVGPathElement) {\n  if (!el.hasAttribute('d')) {\n    return el.getTotalLength();\n  }\n  const d = el.getAttribute('d');\n  const pathString = d ? d.replace(/m/gi, 'M') : null;\n\n  if (!pathString) {\n    return el.getTotalLength();\n  }\n\n  const paths = pathString\n    .split('M')\n    .filter(path => path !== '')\n    .map(path => `M${path}`);\n\n  if (paths.length === 1) {\n    return el.getTotalLength();\n  }\n\n  let maxLength = 0;\n\n  paths.forEach(path => {\n    const pathElement = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    pathElement.setAttribute('d', path);\n    maxLength = Math.max(maxLength, pathElement.getTotalLength());\n  });\n\n  return maxLength;\n}\n\nfunction getTotalLength(el: any) {\n  if (el.getTotalLength) {\n    return getPathLength(el);\n  }\n  switch (el.tagName.toLowerCase()) {\n    case 'circle':\n      return getCircleLength(el);\n    case 'rect':\n      return getRectLength(el);\n    case 'line':\n      return getLineLength(el);\n    case 'polyline':\n      return getPolylineLength(el);\n    case 'polygon':\n      return getPolygonLength(el);\n    default:\n      return 0;\n  }\n}\n\nexport const SvgDrawPlugin = {\n  version: '2.0.0',\n  name: 'svgDraw',\n  register(core: any, Plugin: any, propTween: any) {\n    gsap = core;\n    _interpolate = gsap.utils.interpolate;\n    _getProp = gsap.getProperty;\n  },\n  init(target: any, value: number, _tween: any, index: number, targets: any) {\n    const length = getTotalLength(target);\n\n    let lengthParam = value;\n    let offsetParam = 0;\n\n    if (Array.isArray(value)) {\n      lengthParam = value[0];\n      if (value.length >= 2) {\n        offsetParam = value[1] * -1;\n      }\n    }\n\n    let data = this;\n    data.target = target;\n    data.strokeDashoffset = _interpolate(\n      _getProp(target, 'stroke-dashoffset'),\n      length * offsetParam\n    );\n    data.strokeDasharray = _interpolate(_getProp(target, 'stroke-dasharray'), [\n      lengthParam * length,\n      length,\n    ]);\n  },\n  render(progress: number, data: any) {\n    data.target.setAttribute('stroke-dashoffset', data.strokeDashoffset(progress));\n    data.target.setAttribute('stroke-dasharray', data.strokeDasharray(progress));\n  },\n};\n\n_getGSAP() && gsap.registerPlugin(SvgDrawPlugin);\n\nexport { SvgDrawPlugin as default };\n","import { nullishCoalescing } from '../helper';\n\nlet gsap: any;\nlet _interpolate: any;\nlet _format: any;\nconst _getGSAP = () =>\n  gsap || (typeof window !== 'undefined' && (gsap = window.gsap) && gsap.registerPlugin && gsap);\n\ntype Prop =\n  | {\n      value: string | number;\n      format: () => (value: string | number) => number | string;\n    }\n  | number\n  | string;\n\nexport const CountPlugin = {\n  version: '1.0.0',\n  name: 'count',\n  register(core: any, Plugin: any, propTween: any) {\n    gsap = core;\n    _interpolate = gsap.utils.interpolate;\n    _format = (value: string | number) => parseInt(value.toString(), 10);\n  },\n  init(target: any, value: Prop, _tween: any, index: number, targets: any) {\n    let inputValue = value;\n    let format = _format;\n    if (typeof value === 'object') {\n      inputValue = nullishCoalescing(value.value, 0);\n      if (value.format) {\n        format = value.format;\n      }\n    }\n\n    const initialCount = parseFloat(target.innerText);\n\n    let data = this;\n    data.target = target;\n    data.count = _interpolate(initialCount, parseFloat(inputValue.toString()));\n    data.format = format;\n  },\n  render(progress: number, data: any) {\n    data.target.innerText = data.format(data.count(progress));\n  },\n};\n\n_getGSAP() && gsap.registerPlugin(CountPlugin);\n\nexport { CountPlugin as default };\n","import React, { Fragment, ReactElement } from 'react';\nimport { gsap } from 'gsap';\nimport { PlayState } from './types';\nimport {\n  getTweenFunction,\n  setPlayState,\n  isEqual,\n  getRefProp,\n  setProps,\n  setInitialPlayState,\n} from './helper';\nimport { Context } from './Provider';\n\nimport SvgDrawPlugin from './plugins/PlugInSvgDraw';\nimport CountPlugin from './plugins/PlugInCount';\n\n// @ts-ignore\ngsap.registerPlugin(SvgDrawPlugin);\n\n// @ts-ignore\ngsap.registerPlugin(CountPlugin);\n\ntype StaggerFunction = (index: number, target: any, list: any) => number;\ntype StaggerFromValues = 'start' | 'center' | 'edges' | 'random' | 'end';\ntype EaseFunction = (value: number) => number;\n\nexport type Stagger =\n  | {\n      amount?: number;\n      each?: number;\n      from?: StaggerFromValues | number | [number, number];\n      grid?: [number, number] | 'auto';\n      axis?: 'x' | 'y';\n      ease?: string | EaseFunction;\n      repeat?: number;\n      yoyo?: boolean;\n      [prop: string]: any;\n    }\n  | number\n  | StaggerFunction;\n\nexport type TweenProps = {\n  /** One or multiple \"refable\" components  */\n  children?: React.ReactNode;\n  wrapper?: React.ReactElement;\n  target?: number | string;\n  position?: string | number;\n\n  from?: any;\n  to?: any;\n  stagger?: Stagger;\n\n  duration?: number;\n  progress?: number;\n  totalProgress?: number;\n  playState?: PlayState;\n\n  disabled?: boolean;\n  onlyInvalidateTo?: boolean;\n\n  [prop: string]: any;\n};\n\nclass Tween extends React.Component<TweenProps, {}> {\n  static displayName = 'Tween';\n  static contextType = Context;\n\n  tween: any;\n  targets: any[] = [];\n\n  constructor(props: TweenProps) {\n    super(props);\n\n    this.addTarget = this.addTarget.bind(this);\n  }\n\n  componentDidMount() {\n    this.createTween();\n\n    // props at mount\n    setProps(this.tween, this.props);\n    setInitialPlayState(this.tween, this.props);\n\n    this.context.registerConsumer(this);\n  }\n\n  componentWillUnmount() {\n    if (this.tween) {\n      this.tween.kill();\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    this.targets = [];\n    return null;\n  }\n\n  componentDidUpdate(prevProps: TweenProps) {\n    const {\n      children,\n      wrapper,\n\n      duration,\n      from,\n      to,\n      stagger,\n\n      progress,\n      totalProgress,\n      playState,\n      disabled,\n      onlyInvalidateTo,\n\n      onCompleteAll,\n      onCompleteAllParams,\n      onCompleteAllScope,\n      onStartAll,\n\n      position,\n      target,\n\n      ...vars\n    } = this.props;\n\n    // if children change create a new tween\n    // TODO: replace easy length check with fast equal check\n    if (React.Children.count(prevProps.children) !== React.Children.count(children)) {\n      this.createTween();\n    }\n\n    if (disabled) {\n      return;\n    }\n\n    // execute function calls\n    setProps(this.tween, this.props, prevProps);\n\n    // if \"to\" props are changed: reinit and restart tween\n    if (!isEqual(to, prevProps.to)) {\n      // is Tween\n      if (!this.tween.getChildren) {\n        this.tween.vars = { ...to, ...vars };\n\n        if (onlyInvalidateTo) {\n          var progressTmp = this.tween.progress();\n          this.tween\n            .progress(0)\n            .invalidate()\n            .progress(progressTmp);\n        } else {\n          this.tween.invalidate();\n        }\n      }\n      // is Timeline\n      // TODO: not yet ready\n      else {\n        let delay = 0;\n        this.tween.getChildren(false, true, false).forEach((tween: any) => {\n          tween.vars = { ...to, ...vars, ...{ delay } };\n          tween.invalidate();\n          // delay += stagger || 0;\n        });\n      }\n\n      if (!this.tween.paused()) {\n        this.tween.restart();\n      }\n    }\n\n    setPlayState(playState, prevProps.playState, this.tween);\n  }\n\n  createTween() {\n    if (this.tween) {\n      this.tween.kill();\n    }\n\n    if (this.props.children) {\n      this.tween = getTweenFunction(this.targets, this.props, this.context);\n    } else {\n      // why this is needed?\n      this.tween = () => {};\n    }\n  }\n\n  getGSAP() {\n    return this.tween;\n  }\n\n  setGSAP(tween: any) {\n    this.tween = tween;\n  }\n\n  addTarget(target: any) {\n    // target is null at unmount\n    if (target !== null) {\n      this.targets.push(target);\n    }\n  }\n\n  getTargets() {\n    return this.targets;\n  }\n\n  render() {\n    let { children, wrapper } = this.props;\n\n    const output = (\n      <Fragment>\n        {React.Children.map(children, child => {\n          return React.cloneElement(child as ReactElement, getRefProp(child, this.addTarget));\n        })}\n      </Fragment>\n    );\n\n    if (wrapper) {\n      return React.cloneElement(wrapper, [], output);\n    }\n\n    return output;\n  }\n}\n\nexport default Tween;\n","import React, { Fragment, ReactElement, ReactNode } from 'react';\nimport { gsap } from 'gsap';\nimport { isForwardRef, isFragment } from 'react-is';\nimport { PlayState } from './types';\nimport {\n  getInitialPaused,\n  getTargetRefProp,\n  getTweenFunction,\n  nullishCoalescing,\n  setInitialPlayState,\n  setPlayState,\n  setProps,\n} from './helper';\nimport Provider, { Context } from './Provider';\nimport { TweenProps } from './Tween';\n\ntype Label = {\n  label: string;\n  position: string | number;\n};\n\nexport type Targets = Map<string | number, ReactElement | ReactElement[]>;\nexport type TargetsRef = {\n  set: (key: string, target: any) => void;\n};\n\nexport type Target = ReactElement | null;\n\nexport type TimelineProps = {\n  children: ReactNode;\n  wrapper?: ReactElement;\n  target?: Target;\n  position?: string | number;\n  labels?: Label[];\n\n  duration?: number;\n  progress?: number;\n  totalProgress?: number;\n  playState?: PlayState;\n\n  [prop: string]: any;\n};\n\nclass Timeline extends Provider<TimelineProps> {\n  static displayName = 'Timeline';\n\n  timeline: any;\n  targets: Targets = new Map();\n\n  static defaultProps = {\n    playState: PlayState.play,\n  };\n\n  constructor(props: TimelineProps) {\n    super(props);\n\n    this.addTarget = this.addTarget.bind(this);\n    this.setTarget = this.setTarget.bind(this);\n  }\n\n  componentDidMount() {\n    this.createTimeline();\n\n    // props at mount\n    setProps(this.timeline, this.props);\n    setInitialPlayState(this.timeline, this.props);\n\n    this.context.registerConsumer(this);\n  }\n\n  componentWillUnmount() {\n    this.timeline.kill();\n  }\n\n  getSnapshotBeforeUpdate() {\n    this.targets = new Map();\n    return null;\n  }\n\n  componentDidUpdate(prevProps: TimelineProps) {\n    const { children, duration, progress, totalProgress, playState, target } = this.props;\n\n    // if children change create a new timeline\n    // TODO: replace easy length check with fast equal check\n    // TODO: same for props.target?\n    if (React.Children.count(prevProps.children) !== React.Children.count(children)) {\n      this.createTimeline();\n    }\n\n    // execute function calls\n    setProps(this.timeline, this.props, prevProps);\n\n    // TODO: need rerender or something if target change?\n    // if (target !== prevProps.target) {\n    //   this.forceUpdate();\n    // }\n\n    setPlayState(playState, prevProps.playState, this.timeline);\n  }\n\n  createTimeline() {\n    const {\n      children,\n      target,\n      duration,\n      progress,\n      totalProgress,\n      playState,\n      labels,\n      position,\n      ...vars\n    } = this.props;\n\n    if (this.timeline) {\n      this.timeline.kill();\n    }\n\n    const plugins = this.context?.getPlugins(this.context?.plugins, this.targets) ?? {};\n\n    // init timeline\n    this.timeline = gsap.timeline({\n      smoothChildTiming: true,\n      paused: getInitialPaused(playState),\n      ...vars,\n      ...plugins,\n    });\n\n    if (labels) {\n      labels.forEach(label => {\n        this.timeline.addLabel(label.label, label.position);\n      });\n    }\n\n    // add tweens or nested timelines to timeline\n    this.consumers.forEach(consumer => {\n      // Tween with no children -> control Timeline target\n      if (consumer.tween && !consumer.props.children) {\n        const { position, target, stagger, ...vars } = consumer.props as TweenProps;\n\n        // get target if not nullish\n        let targets = null;\n        if (target !== null && typeof target !== 'undefined') {\n          targets = this.targets.get(target);\n        }\n\n        // if no target found -> take all Timeline targets as target\n        const tween = getTweenFunction(\n          // @ts-ignore\n          nullishCoalescing(targets, Array.from(this.targets.values())),\n          {\n            stagger,\n            ...vars,\n          }\n        );\n        this.timeline.add(tween, nullishCoalescing(position, '+=0'));\n        consumer.setGSAP(tween);\n      } else {\n        const { position } = consumer.props;\n        this.timeline.add(consumer.getGSAP(), nullishCoalescing(position, '+=0'));\n      }\n    });\n  }\n\n  getGSAP() {\n    return this.timeline;\n  }\n\n  addTarget(target: any) {\n    if (target !== null) {\n      this.targets.set(this.targets.size, target);\n    }\n  }\n\n  setTarget(key: string, target: any) {\n    if (target !== null) {\n      if (this.targets.has(key)) {\n        const targets = this.targets.get(key);\n        if (Array.isArray(targets)) {\n          this.targets.set(key, [...targets, target]);\n        } else {\n          this.targets.set(key, [targets, target]);\n        }\n      } else {\n        this.targets.set(key, target);\n      }\n    }\n  }\n\n  setTargets(targets: Targets) {\n    this.targets = targets;\n  }\n\n  getTargets() {\n    return this.targets;\n  }\n\n  cloneElement(child: any) {\n    // @ts-ignore\n    return React.cloneElement(child, getTargetRefProp(child, this.setTarget, this.addTarget));\n  }\n\n  renderTarget(target?: Target): ReactNode {\n    if (!target) {\n      return null;\n    }\n\n    // if is forwardRef clone and pass targets as ref\n    if (isForwardRef(target)) {\n      return this.cloneElement(target);\n    }\n\n    // else iterate the first level of children and set targets\n    return (\n      <Fragment>\n        {/* First render the target */}\n        {React.Children.map<ReactElement, ReactElement>(target, child => {\n          if (isFragment(child)) {\n            return React.Children.map(child.props.children, fragmentChild => {\n              return this.cloneElement(fragmentChild);\n            });\n          }\n          return this.cloneElement(child);\n        })}\n      </Fragment>\n    );\n  }\n\n  render() {\n    let { target, children, wrapper } = this.props;\n\n    const renderedTarget = this.renderTarget(target);\n\n    let output = (\n      <Fragment>\n        {renderedTarget}\n        {children}\n      </Fragment>\n    );\n\n    if (wrapper) {\n      output = React.cloneElement(wrapper, [], output);\n    }\n\n    return this.renderWithProvider(output);\n  }\n}\n\nexport default Timeline;\n","import React from 'react';\nimport { gsap } from 'gsap';\nimport { nullishCoalescing } from '../helper';\nimport Provider from '../Provider';\n\nexport type RevealProps = {\n  children: React.ReactNode;\n  trigger: React.ReactElement | null;\n  repeat: boolean;\n  root: Element | null;\n  rootMargin: string;\n  threshold: number;\n};\n\nenum EntryState {\n  unknown,\n  entered,\n  exited,\n}\n\nclass Reveal extends Provider<RevealProps> {\n  static displayName = 'Reveal';\n\n  static defaultProps = {\n    trigger: null,\n    repeat: false,\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.66,\n  };\n\n  timeline: any;\n  triggerRef: HTMLElement | null = null;\n  observer: IntersectionObserver | null = null;\n\n  init() {\n    this.createTimeline();\n    this.createIntersectionObserver();\n  }\n\n  kill() {\n    this.killTimeline();\n    this.killIntersectionObserver();\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentWillUnmount() {\n    this.kill();\n  }\n\n  componentDidUpdate(prevProps: RevealProps) {\n    const { children, trigger } = this.props;\n\n    // if children change create a new timeline\n    // TODO: replace easy length check with fast equal check\n    // TODO: same for props.target?\n    if (React.Children.count(prevProps.children) !== React.Children.count(children)) {\n      this.init();\n    }\n\n    if (prevProps.trigger !== trigger) {\n      this.init();\n    }\n  }\n\n  createTimeline() {\n    this.killTimeline();\n\n    // init timeline\n    this.timeline = gsap.timeline({\n      smoothChildTiming: true,\n      paused: true,\n    });\n\n    // add consumers\n    this.consumers.forEach(consumer => {\n      const { position } = consumer.props;\n      this.timeline.add(consumer.getGSAP().play(), nullishCoalescing(position, 0));\n    });\n  }\n\n  killTimeline() {\n    if (this.timeline) {\n      this.timeline.kill();\n    }\n  }\n\n  createIntersectionObserver() {\n    let { root, rootMargin, threshold } = this.props;\n\n    const options = {\n      root,\n      rootMargin,\n      threshold: [0, threshold],\n    };\n\n    this.observer = new IntersectionObserver(this.intersectionObserverCallback, options);\n\n    // It would be better if we wouldn't need an extra wrapper.\n    // But it can be problematic for example with a fadeInLeft animation\n    // were the element is out of the viewport in the initial state.\n    // In this case there wouldn't be an intersection..\n    if (!this.triggerRef) {\n      this.consumers.forEach(consumer => {\n        consumer.getTargets().forEach((target: any) => {\n          this.observer && this.observer.observe(target);\n        });\n      });\n    } else {\n      this.observer && this.observer.observe(this.triggerRef);\n    }\n  }\n\n  killIntersectionObserver() {\n    this.unobserveAll();\n    this.observer = null;\n  }\n\n  unobserveAll() {\n    if (this.observer) {\n      if (!this.triggerRef) {\n        this.consumers.forEach(consumer => {\n          consumer.getTargets().forEach((target: any) => {\n            this.observer && this.observer.unobserve(target);\n          });\n        });\n      } else {\n        this.observer && this.observer.unobserve(this.triggerRef);\n      }\n    }\n  }\n\n  intersectionObserverCallback = (entries: any) => {\n    let { repeat, threshold } = this.props;\n    let state: EntryState = EntryState.unknown;\n\n    for (const entry of entries) {\n      if (entry.isIntersecting && entry.intersectionRatio >= threshold) {\n        this.timeline.play();\n        state = EntryState.entered;\n        break;\n      } else if (!entry.isIntersecting) {\n        state = EntryState.exited;\n        break;\n      }\n    }\n\n    if (!repeat && state === EntryState.entered) {\n      this.killIntersectionObserver();\n    } else if (repeat && state === EntryState.exited) {\n      this.timeline.pause(0);\n    }\n  };\n\n  getGSAP() {\n    return this.timeline;\n  }\n\n  render() {\n    let { children, trigger } = this.props;\n\n    let output = trigger ? (\n      <trigger.type {...trigger.props} ref={(trigger: HTMLElement) => (this.triggerRef = trigger)}>\n        {children}\n      </trigger.type>\n    ) : (\n      children\n    );\n\n    return this.renderWithProvider(output);\n  }\n}\n\nexport default Reveal;\n","import React from 'react';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger as ScrollTriggerPlugin } from 'gsap/dist/ScrollTrigger';\nimport Provider, { Context } from '../Provider';\n\ngsap.registerPlugin(ScrollTriggerPlugin);\n\nexport type ScrollTriggerProps = {\n  children?: React.ReactNode;\n} & gsap.plugins.ScrollTriggerInstanceVars;\n\nclass ScrollTrigger extends Provider<ScrollTriggerProps> {\n  static displayName = 'ScrollTrigger';\n  static contextType = Context;\n\n  scrollTrigger: any | null = null;\n  targets: any = {};\n\n  constructor(props: ScrollTriggerProps) {\n    super(props);\n\n    this.getPlugin = this.getPlugin.bind(this);\n  }\n\n  // override and pass registerConsumer to next parent provider\n  registerConsumer(consumer: any) {\n    this.context.registerConsumer(consumer);\n  }\n\n  componentDidMount() {\n    const { children, ...scrollTrigger } = this.props;\n\n    if (!children) {\n      this.scrollTrigger = ScrollTriggerPlugin.create(scrollTrigger);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.scrollTrigger) {\n      this.scrollTrigger.kill();\n    }\n  }\n\n  // componentDidUpdate(prevProps: ScrollTriggerProps) {\n  //   const { trigger } = this.props;\n  //\n  //   if (trigger !== prevProps.trigger) {\n  //     console.log('prevProps.trigger', prevProps.trigger);\n  //     console.log('trigger', trigger);\n  //   }\n  // }\n\n  getGSAP() {\n    return this.scrollTrigger;\n  }\n\n  getPlugin(props: any, targets: any) {\n    let { children, trigger: triggerProp, ...scrollTrigger } = props;\n\n    let trigger = triggerProp;\n\n    if (targets instanceof Map) {\n      if (trigger) {\n        const target = targets.get(trigger);\n        if (target) {\n          trigger = target;\n        }\n      } else {\n        trigger = Array.from(targets.values());\n      }\n    } else if (!trigger) {\n      trigger = targets;\n    }\n\n    return {\n      trigger,\n      ...scrollTrigger,\n    };\n  }\n\n  render() {\n    const { children, ...scrollTrigger } = this.props;\n    if (!children) {\n      return null;\n    }\n    return this.renderWithProvider(children, {\n      scrollTrigger,\n    });\n  }\n}\n\nexport default ScrollTrigger;\n","import React from 'react';\n\ntype SplitWordsProps = {\n  children: React.ReactNode;\n  wrapper: React.ReactElement;\n  delimiter?: string;\n};\n\ntype SplitCharsProps = {\n  children: React.ReactNode;\n  wrapper: React.ReactElement;\n};\n\nconst escapeRegExp = (regExp: string) => {\n  var specialChars = ['$', '^', '*', '(', ')', '+', '[', ']', '{', '}', '\\\\', '|', '.', '?', '/'];\n  var regex = new RegExp('(\\\\' + specialChars.join('|\\\\') + ')', 'g');\n  return regExp.replace(regex, '\\\\$1');\n};\n\n// TODO: possible or better to output all the refs as one array?\nexport const SplitWords = React.forwardRef<any, SplitWordsProps>(\n  ({ children, wrapper, delimiter = ' ' }, ref) => {\n    if (typeof children !== 'string') {\n      throw new Error('SplitWords only accepts a string as child.');\n    }\n    const words = children.split(new RegExp(`(${escapeRegExp(delimiter)})`, 'g'));\n    return (\n      <>\n        {words.map((word: string, i: number) => {\n          if (delimiter === ' ' && word === delimiter) {\n            return <React.Fragment key={i}> </React.Fragment>;\n          }\n          return React.cloneElement(wrapper, { ref, key: i }, word);\n        })}\n      </>\n    );\n  }\n);\n\n// TODO: possible or better to output all the refs as one array?\nexport const SplitChars = React.forwardRef<any, SplitCharsProps>(({ children, wrapper }, ref) => {\n  if (typeof children !== 'string') {\n    throw new Error('SplitChars only accepts a string as child.');\n  }\n  return (\n    <>\n      {children\n        .split(\n          /(?=(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))/\n        )\n        .map((char: string, i: number) => {\n          // TODO: enhance check for space\n          if (char === ' ') {\n            return <React.Fragment key={i}> </React.Fragment>;\n          }\n          return React.cloneElement(wrapper, { ref, key: i }, char);\n        })}\n    </>\n  );\n});\n\nexport const SplitLetters = React.forwardRef((props: any, ref) => {\n  console.warn('Deprecation warning: Use SplitChars instead of SplitLetters');\n  return <SplitChars {...props} ref={ref} />;\n});\n","import React from 'react';\nimport { PlayState } from './../types';\nimport { setPlayState } from './../helper';\nimport Provider from '../Provider';\n\ntype ControlsProps = {\n  playState?: PlayState;\n};\n\ntype ControlsState = {\n  totalProgress: number;\n  playState?: PlayState;\n  prevPlayState?: PlayState;\n};\n\nclass Controls extends Provider<ControlsProps, ControlsState> {\n  gsap: any;\n  slider: any;\n  sliderTouched: boolean = false;\n\n  state = {\n    totalProgress: 0,\n    playState: undefined,\n    prevPlayState: undefined,\n  };\n\n  containerStyle = {\n    backgroundColor: '#f0f0f0',\n    padding: '10px 10px 0 10px',\n    marginTop: '10px',\n    position: 'relative' as 'relative',\n    zIndex: 2,\n    fontFamily: 'verdana, sans-serif',\n    fontSize: '16px',\n    border: '1px solid #ccc',\n  };\n\n  buttonContainerStyle = {\n    margin: '0',\n    display: 'flex',\n    flexWrap: 'wrap' as 'wrap',\n    justifyContent: 'space-between',\n  };\n\n  buttonStyle = {\n    border: '1px solid #999',\n    backgroundColor: '#f0f0f0',\n    padding: '5px',\n    margin: '10px 10px 10px 0',\n    cursor: 'pointer',\n  };\n\n  sliderStyle = {\n    margin: '0',\n    width: '100%',\n  };\n\n  playStateStyle = {\n    color: '#999',\n    margin: '10px 0',\n    fontSize: '14px',\n  };\n\n  componentDidMount() {\n    if (this.consumers.length) {\n      this.gsap = this.consumers[0];\n\n      const gsap = this.gsap.getGSAP();\n\n      if (gsap) {\n        gsap.eventCallback('onUpdate', this.onUpdate);\n\n        if (this.props.playState) {\n          this.setPlayState(this.props.playState);\n        } else {\n          // get child initial state\n          if (gsap.paused()) {\n            this.setPlayState(PlayState.pause);\n          } else if (gsap.reversed()) {\n            this.setPlayState(PlayState.reverse);\n          } else {\n            this.setPlayState(PlayState.play);\n          }\n        }\n\n        const totalProgress = gsap.totalProgress();\n        this.slider.value = totalProgress * 100;\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.onUpdate();\n  }\n\n  onUpdate = () => {\n    if (this.gsap && this.slider && !this.sliderTouched) {\n      const totalProgress = this.gsap.getGSAP().totalProgress();\n      this.slider.value = totalProgress * 100;\n    }\n  };\n\n  onChange = (event: any) => {\n    if (this.gsap && this.gsap.getGSAP()) {\n      this.gsap.getGSAP().totalProgress(event.target.value / 100);\n    }\n  };\n\n  setPlayState = (state: PlayState) => {\n    this.setState(prevState => {\n      return {\n        playState: state,\n        prevPlayState: prevState.playState,\n      };\n    });\n  };\n\n  getControls = (_totalProgress: any, playState: PlayState | undefined) => (\n    <div style={this.containerStyle}>\n      <input\n        ref={el => (this.slider = el)}\n        type=\"range\"\n        style={this.sliderStyle}\n        step=\"0.001\"\n        onChange={e => this.onChange(e)}\n        onMouseDown={() => (this.sliderTouched = true)}\n        onMouseUp={() => (this.sliderTouched = false)}\n      />\n      <div style={this.buttonContainerStyle}>\n        <div>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.play)}\n          >\n            Play\n          </button>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.reverse)}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.pause)}\n          >\n            Pause\n          </button>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.stop)}\n          >\n            Stop\n          </button>\n        </div>\n        <span style={this.playStateStyle}>{playState}</span>\n      </div>\n    </div>\n  );\n\n  render() {\n    const { children } = this.props;\n    const { totalProgress, playState, prevPlayState } = this.state;\n\n    if (this.gsap) {\n      setPlayState(playState, prevPlayState, this.gsap.getGSAP());\n    }\n\n    return this.renderWithProvider(\n      <div>\n        {children}\n        {this.getControls(totalProgress, playState)}\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n"],"names":["PlayState","String","prototype","startsWith","searchString","position","indexOf","setPlayState","playState","prevPlayState","tween","play","restart","reverse","restartReverse","stop","pause","stopEnd","resume","setInitialPlayState","tweenOrTimeline","props","getInitialPaused","getTweenFunction","targets","context","duration","from","to","stagger","progress","disabled","onCompleteAll","onCompleteAllParams","onCompleteAllScope","onStartAll","vars","tweenFunction","paused","plugins","getPlugins","gsap","fromTo","Array","isArray","forEach","t","timeline","tweens","smoothChildTiming","onComplete","onCompleteParams","onCompleteScope","onStart","isEqual","obj1","obj2","JSON","stringify","getReactNode","dom","traverseUp","key","Object","keys","find","domFiber","_currentElement","compFiber","_owner","i","_instance","stateNode","getCompFiber","fiber","parentFiber","type","getRefProp","child","addTarget","innerRef","target","current","ref","setOrAddTarget","setTarget","reactNode","elementRef","singleRef","getTargetRefProp","nullishCoalescing","value","ifNullish","setProps","prevProps","undefined","totalProgress","Context","React","createContext","registerConsumer","Provider","consumers","bind","getContextValue","getPlugin","renderWithProvider","consumer","push","plugin","reduce","acc","hasOwnProperty","call","output","Component","_interpolate","_getProp","_getGSAP","window","registerPlugin","getDistance","p1","p2","Math","sqrt","pow","x","y","getCircleLength","el","PI","parseFloat","getAttribute","getRectLength","getLineLength","getPolylineLength","points","totalLength","previousPos","numberOfItems","currentPos","getItem","getPolygonLength","getPathLength","hasAttribute","getTotalLength","d","pathString","replace","paths","split","filter","path","map","length","maxLength","pathElement","document","createElementNS","setAttribute","max","tagName","toLowerCase","SvgDrawPlugin","version","name","register","core","Plugin","propTween","utils","interpolate","getProperty","init","_tween","index","lengthParam","offsetParam","data","strokeDashoffset","strokeDasharray","render","_format","CountPlugin","parseInt","toString","inputValue","format","initialCount","innerText","count","Tween","componentDidMount","createTween","componentWillUnmount","kill","getSnapshotBeforeUpdate","componentDidUpdate","children","wrapper","onlyInvalidateTo","Children","getChildren","progressTmp","invalidate","delay","getGSAP","setGSAP","getTargets","Fragment","cloneElement","Timeline","Map","createTimeline","labels","label","addLabel","get","values","add","set","size","has","setTargets","renderTarget","isForwardRef","isFragment","fragmentChild","renderedTarget","EntryState","Reveal","entries","repeat","threshold","state","unknown","entry","isIntersecting","intersectionRatio","entered","exited","killIntersectionObserver","createIntersectionObserver","killTimeline","trigger","root","rootMargin","options","observer","IntersectionObserver","intersectionObserverCallback","triggerRef","observe","unobserveAll","unobserve","ScrollTriggerPlugin","ScrollTrigger","scrollTrigger","create","triggerProp","escapeRegExp","regExp","specialChars","regex","RegExp","join","SplitWords","forwardRef","delimiter","Error","words","word","SplitChars","char","SplitLetters","console","warn","Controls","backgroundColor","padding","marginTop","zIndex","fontFamily","fontSize","border","margin","display","flexWrap","justifyContent","cursor","width","color","slider","sliderTouched","event","setState","prevState","_totalProgress","style","containerStyle","sliderStyle","step","onChange","e","onMouseDown","onMouseUp","buttonContainerStyle","buttonStyle","onClick","playStateStyle","eventCallback","onUpdate","reversed","getControls"],"mappings":"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"}